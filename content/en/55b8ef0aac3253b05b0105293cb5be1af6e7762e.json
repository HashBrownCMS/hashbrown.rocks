{"title":"Creating a plugin","url":"/guides/creating-a-plugin/","template":"sectionPage","description":"A quick guide on creating plugins","sections":[{"value":{"text":"<p>&nbsp;</p>\n\n<h2 id=\"file\">File</h2>\n\n<p>&nbsp;</p>\n\n<p>The recommended structure is this:</p>\n\n<pre>\n<code>/plugins\n    /my-plugin\n        /index.js\n        /server/MyServerCode.js\n        /client/MyClientCode.js\n</code></pre>\n\n<h2 id=\"server-endpoint\">Server: Endpoint</h2>\n\n<p>Here is an example of a server side endpoint:</p>\n\n<pre>\n<code>&#39;use strict&#39;;\n\nclass MyPlugin {\n    static init(app) {\n        app.get(&#39;/plugins/my-plugin/endpoint&#39;, (req, res) =&gt; {\n            res.status(200).send(&#39;OK&#39;);\n        });\n    }\n}\n\nmodule.exports = MyPlugin;\n</code></pre>\n\n<h2 id=\"client-connection-editor\">Client: Deployer editor</h2>\n\n<p>An example of client side code implementing a Deployer editor:</p>\n\n<pre>\n<code>&#39;use strict&#39;;\n\nclass MyDeployerEditor extends Crisp.View {\n    constructor(params) {\n        super(params);\n\n        this.fetch();\n    }\n\n    template() {\n        return _.div({class: &#39;my-deployer-editor&#39;});\n    }\n}\n\nHashBrown.Views.Editors.DeployerEditors[&#39;MyDeployer&#39;] = MyDeployerEditor;\n</code></pre>\n\n<p>This example makes use of the <a href=\"https://github.com/Putaitu/crisp-ui\">Crisp UI</a> view class and templating.</p>\n\n<h2 id=\"client-extra-navbar-pane\">Client: Extra navbar pane</h2>\n\n<p>An example of client side code implementing an extra navbar pane:</p>\n\n<pre>\n<code>&#39;use strict&#39;;\n\nfunction myItemAction() {\n    var id = document.querySelector(&#39;.context-menu-target&#39;);\n\n    alert(id); // The id of the pane item\n}\n\nfunction myPaneAction() {\n    // Do something\n}\n\nNavbarMain.addTabPane(&#39;/my-plugin/&#39;, &#39;My Plugin&#39;, &#39;font-awesome-icon&#39;, {\n    getItems: () =&gt; {\n        return [ { id: &#39;some-id&#39;, title: &#39;Some title&#39; } ];\n    },\n\n    itemContextMenu: {\n        &#39;This item&#39;: &#39;---&#39;,\n        &#39;Item action&#39;: () =&gt; { myItemAction(); }\n    },\n\n    paneContextMenu: {\n        &#39;General&#39;: &#39;---&#39;,\n        &#39;Pane action&#39;: () =&gt; { myPaneAction(); }\n    }\n});\n</code></pre>\n\n<p>For more inspiration on making navbar panes, check out the <a href=\"https://github.com/Putaitu/hashbrown-cms/blob/master/src/Client/Views/Navigation/ContentPane.js\">ContentPane source</a></p>\n","template":"richTextSection"},"schemaId":"richTextSection"}],"level":"advanced","id":"55b8ef0aac3253b05b0105293cb5be1af6e7762e","parentId":"bf70856caed6633b734d5b0e7b61a651305571f1","schemaId":"sectionPage","createDate":"2017-11-01T15:04:03.499Z","updateDate":"2019-03-09T07:42:17.593Z","createdBy":"Unknown","updatedBy":"I Am Test","sort":50002,"language":"en"}